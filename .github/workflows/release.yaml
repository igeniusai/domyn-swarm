name: Release

on:
  push:
    tags:
      - "v*"
      - "[0-9]+.[0-9]+.[0-9]+"   # support both v1.2.3 and 1.2.3
  workflow_dispatch:
    inputs:
      version:
        description: "Override version (optional, e.g., 1.2.3-rc.1)"
        required: false
        type: string
      dry_run:
        description: "Build only; do not push to registry"
        required: true
        default: true
        type: boolean


concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Read version from pyproject
        id: ver
        run: |
          VERSION="$(python3.12 src/domyn_swarm/utils/version.py)"
          test -n "$VERSION" || (echo "No [project].version in pyproject.toml" && exit 2)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Verify tag matches version
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          if [ "${{ steps.ver.outputs.VERSION }}" != "$TAG" ]; then
            echo "Tag ($TAG) != pyproject version (${{ steps.ver.outputs.VERSION }})"
            exit 3
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker metadata (version + latest)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            igeniusai/domyn-swarm
          tags: |
            type=raw,value=${{ steps.verify.outputs.VERSION }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.version=${{ steps.verify.outputs.VERSION }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push (release)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
