name: CI

on:
  push:
    branches: ["**"]       # all branches
    tags-ignore: ["**"]    # ignore tags here; releases handled in release.yml
  pull_request:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pipx install uv==0.4.28

      - name: Cache uv and venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ./.venv
          key: uv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Sync dependencies (frozen)
        run: uv sync --all-extras --frozen

      - name: Run pre-commit (all files)
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

      - name: Run tests
        run: uv run pytest -v --ignore=tests/test_state.py

  build-dev-image:
    # Build/push dev images only for branch pushes from the main repo (not PRs from forks)
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/heads/') && github.repository_owner == 'igeniusai'
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Compute dev tags
        id: vars
        run: |
          BRANCH="${GITHUB_REF_NAME}"
          # slugify branch for a valid tag (lowercase, replace invalid chars with '-')
          SAFE_BRANCH="$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed -E 's/[^a-z0-9._-]+/-/g')"
          SHORT_SHA="$(git rev-parse --short=12 HEAD)"
          echo "BRANCH_TAG=dev-${SAFE_BRANCH}" >> "$GITHUB_OUTPUT"
          echo "SHA_TAG=dev-${SAFE_BRANCH}-${SHORT_SHA}" >> "$GITHUB_OUTPUT"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            igeniusai/domyn-swarm
          tags: |
            type=raw,value=${{ steps.vars.outputs.BRANCH_TAG }}
            type=raw,value=${{ steps.vars.outputs.SHA_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push (dev)
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
